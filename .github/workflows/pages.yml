name: GitHub Pages

on:
  push:
    branches: [ master ]
  schedule:
    - cron: 0 6 * * 1
  pull_request:
  workflow_dispatch:

permissions:
  pages: write
  actions: read
  contents: read
  id-token: write
  packages: write
  security-events: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  docker-image:
    uses: ./.github/workflows/docker-image.yml

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [ docker-image ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Set npm cache directory
        id: npm-cache
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
            key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
            path: ${{ steps.npm-cache.outputs.dir }}
            restore-keys: ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request'
        id: deployment
        uses: actions/deploy-pages@v4
